<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAddJREFUOE9j/P//
        PwNFAGQADDOkrAoA4vNajbv+m3ft/2/auf8/X96G90CxfiAWQFYL14Okeb7HlKP/j7368n/7i+//l97/
        8n/hvS//N7/89T9v663/vLlggwzQDQHbDpSYHzrv1P8Ftz/9155387/gxCso2Gbl/f/dF97854EYooDi
        aqCAgwXQuZOuvMfQiGyQ6tyb/yuOPP8PVL8f3YD19UeewDXzd5//z5C6GqTwB5D+w5i+Fi7nsPbhf83W
        /SA5uCsYpMq3/vfb+BCuiDlnE9ACRMCC2IwZ6+DywWtugQwogIedMTCkhYB+BmG+zjMgyfvQcLnPkr7m
        P2vGmv8ibcfhapxX3vnPAhQDYZBaBsOO/f+V59wCY/mpV5ANeK8w4zpcDqbGeNn9/84bnoAxcxrQEImy
        rf+tVz+CY56irXAvMALDwnzZPRR5mFpmYNhAEmHKqvWOK+7+D9z5Eow91j/8L1a1CxyIIAXMQG/A5GA0
        W9Y6uCUgAxwkanb/Tz36DgWDNMICijVzLVyOM3cDSiDDE5J2z9H/ZRe+wDGyASCDOHPW/+fO24gRQ8j5
        YL5Cw97/xafe/2+5+fM/KAawpX2sSRk9M0lV7/zPmLqKdAOIsRFdDQDHn3z/+0U4UgAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAgJJREFUOE+dkl1I
        k1EYx09QmC5t3kRfQhAUdTWMLroQi0iQuijCKIKQWDcRRaEQFORFIHUR0k2gERoDaRBmH35FjPVhBdEu
        rEg33bJXe3PTZU7nNuav52wlxD7CHji8z3s4/9//fx7OMvWn7M7d0p4rW2s9WFS4IrVrmNOB2Wi8Tdom
        dfvIj8WzGY3dWVt2uY+6/glaTXgUgvtBaBqJc8DxAWV3emRZswPEWYv14YEI+KMwOAc++ZoxaP+W5OiD
        YQ1x5QJ4Gj9FUuJxEcSSLNZX+Z9MwM3hGFsbn2uIvubfpd2bx9POWhxfAPc0dIfhvSTxC6BXyPudXg1o
        yABsueqiM7hAQAC6+n+mxa9nYSguqWTvpTnPvns5ABsu9XJjJMHofNr9mbi/EbFXnLV4Ula7d4byloHs
        CfRwTj41eBVKEBCIT+7t+y3+LuKpeJLDT8Yoqe+hfO/52sxBymDWXOzh1IsQfUaUOUkxI0IJgRFJUPPY
        YP21t+w625J9iCmivIPS+i4qHINUPRzjtMukumOUzc2fWX3Fje3QdYKFFu6WFpPvMdkE1FFwphNLXTcr
        L3RpR3/VzuPh4IlqYssVU6vUPyBZ8LeUst0pLgqbNZVMlCiG1ilarZY8SfJAvhyr5ONGhXu7QqD/B3m3
        ZxvuHQW0LTWFDibX2STL41iqe+7JK/ULOm2DPNueuogAAAAASUVORK5CYII=
</value>
  </data>
</root>